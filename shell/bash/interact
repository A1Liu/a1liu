#!/bin/bash

HISTCONTROL=ignoreboth:erasedups
HISTSIZE=10000
HISTFILESIZE=10000

# ANSI Colors
Y="\033[0;33m"
B="\033[0;36m"
G="\033[0;32m"
R="\033[0;31m"
NORM="\033[0m"
# ANSI Colors with escapes
YE="\001$Y\002"
RE="\001$R\002"
GE="\001$G\002"

branch() {
  git branch 2>/dev/null | grep '^*' | sed 's/^\*\(.*\)$/\1/'
}

parse_git_dirty() {
  [[ "$(git status --porcelain 2> /dev/null | tail -n1)"  != "" ]] \
    && echo -e "$YE(${RE}X$YE) " || echo " "
}


parse_ret_code() {
  if [ $? -eq 0 ]; then
    echo -e "${GE}#"
  else
    echo -e "${RE}#"
  fi
}

PROMPT_COMMAND=__prompt_command
PS1="\[$B\]\\W\[$Y\]\$(branch)\$(parse_git_dirty)\[$G\]#\[$NORM\] "

# https://stackoverflow.com/questions/16715103/bash-prompt-with-last-exit-code
__prompt_command() {

  local EXIT="$?"

  # https://unix.stackexchange.com/questions/18212/bash-history-ignoredups-and-erasedups-setting-conflict-with-common-history/18443#18443
  history -a
  history -c
  history -r

  PS1="${PS1:0:$((${#PS1} - 27))}"
  if [ $EXIT -eq 0 ]; then
    PS1+="\[$G\]"
  else
    PS1+="\[$R\]"
  fi

  PS1+="#\[$NORM\] "
}


