extern crate alloc;
use alloc::alloc::{alloc, dealloc, realloc};
use core::ptr;

pub struct Vec<T> {
    pub begin: *mut T,
    pub end: usize,
    pub capacity: usize,
}

impl<T> Vec<T> {
    pub fn new() -> Self {
        Self {
            begin: ptr::null_mut(),
            end: 0,
            capacity: 0,
        }
    }

    pub fn push(&mut self, t: T) {
        if end == capacity {
        }
    }

    pub fn len(&self) -> usize {
        self.end
    }
}
