#!/bin/sh

# Vim Commands
alias :q!=exit
alias :q=exit
alias :ex=vim
alias vi=vim
alias di='VIM_DEBUG=1 vim'

alias rmbranch='git branch | grep -v "main" | grep -v "master" | xargs git branch -D'

# Eclim
export ECLIM_SERVER_SCRIPT="${CFG_DIR}/programs/vim/eclimd"

# SSH
alias ssh='TERM=xterm-256color ssh'

# Tmux
function aliu() {
    if tmux attach -d -t "aliu"; then
        return 0
    fi

    tmux new -s "aliu" -c "$HOME/code"
}

function work() {
    if tmux attach -d -t "work$1"; then
        return 0
    fi

    tmux new-session -d -s "work$1" -c "$HOME/code/orthly$1"
    tmux split-window -h -c "$HOME/code/hygenist"
    tmux attach -d -t "work$1"
}

# Disable <C-s> behavior
stty -ixon

alias gs="ls && echo && git s"

# The open command
if command -v 'xdg-open' >/dev/null 2>&1 ; then
    alias open=xdg-open
fi

# tree and ls using exa instead
# alias tree='exa -T'
# alias ls=exa

alias groot='cd "$(git root)"'

# Git
function branch() {
    >&2 echo "Getting current branch..."
    current="$("git" branch | grep \* | cut -d " " -f2)"

    if [ "$current" = "" ]
    then
        return 1
    fi

    >&2 echo "Current branch is ${current}"
    if (( $# != 0 ))
    then
        current="$1"
        >&2 "git" checkout "${current}"
    fi
    echo "${current}"
}

# https://stackoverflow.com/questions/6759791/how-do-i-move-forward-and-backward-between-commits-in-git
function git_gofwd() {
    git checkout $(git rev-list --topo-order HEAD.."$*" | tail -1)
}

# PYTHON

alias python="python3"
alias pip="pip3"

# Default python development environment to fuck around in
export PYDEVENV=~/.pydenv/bin/activate
function pydev() {
    # Deactivate previous environment
    deactivate 2>/dev/null
    # || deactivate_conda_env
    if [ $# = 0 ]
    then
        echo "Entering default python development environment..."
        source "$PYDEVENV"
    else
        echo "executing \`source ${1}/bin/activate\`"
        source "$1/bin/activate"
    fi
    echo "Created alias 'deactivate' to exit environment."
}

# RUBY
alias ruby_setup='eval "$(rbenv init -)" ; alias ruby_setup=true'
alias gem='ruby_setup && unalias gem && gem'
alias bundle='ruby_setup && unalias bundle && bundle'
alias jekyll='ruby_setup && unalias jekyll && jekyll'

export A1LIU_NVM_LOADED=0

a1liu_load_nvm () {
    if [ $A1LIU_NVM_LOADED -eq 0 ]; then
        A1LIU_NVM_LOADED=1
        # The NVM setup script creates a shell function, and having the alias
        # around interferes with that function. We destroy the alias here to
        # prevent any craziness.
        #                           - Albert Liu, Feb 01, 2022 Tue 02:19 EST
        unalias nvm

        export NVM_DIR="$HOME/.nvm"
        export PATH="$PATH:$NVM_DIR"

        NVM_SCRIPT="/usr/local/opt/nvm/nvm.sh"
        NVM_COMPLETIONS="/usr/local/opt/nvm/etc/bash_completion.d/nvm"

        [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
        [ -s "$NVM_SCRIPT" ] && . "$NVM_SCRIPT"
        [ -s "$NVM_COMPLETIONS" ] && . "$NVM_COMPLETIONS"
    fi

    nvm use || true
}

# The unalias happens above, so it's unnecessary here.
#                       - Albert Liu, Feb 01, 2022 Tue 02:20 EST
alias nvm='a1liu_load_nvm && nvm'

alias node='unalias node && a1liu_load_nvm && node'
alias npm='unalias npm && a1liu_load_nvm && npm'
alias yarn='unalias yarn && a1liu_load_nvm && yarn'
alias prettier='unalias prettier && a1liu_load_nvm && prettier'
alias npx='unalias npx && a1liu_load_nvm && npx'
alias firebase='unalias firebase && a1liu_load_nvm && firebase'
alias zx='unalias zx && a1liu_load_nvm && zx'

alias oy='unalias oy && a1liu_load_nvm && oy'
alias infra='yarn run infra'
alias lerna='yarn run lerna'

function karimify() {
    if ! test -e "$HOME/.karim-dotfiles"; then
        git clone https://github.com/karimsa/dotfiles ~/.karim-dotfiles
    fi
    source ~/.karim-dotfiles/.rc
}
